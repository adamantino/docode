#!/usr/bin/env node
var argv = require('yargs')
    .usage('Usage: $0 --sketch=<sketchFolder> [options]')
    .example('$0 --sketch=<sketchFolder>', 'Create documentation assets for the p5 sketch in <sketchFolder>')
    .alias('s', 'sketch')
    .nargs('s', 1)
    .describe('s', 'Specifies the sketch folder to compile into docs.')
    .alias('a', 'animate')
    .nargs('a')
    .describe('a', 'Create an animated gif of the specified sketch.')
    .alias('v', 'video')
    .nargs('v')
    .describe('v', 'Output an mp4 video of the specified sketch.')
    .alias('p', 'preview')
    .nargs('p')
    .describe('p', 'Shows an ascii preview of the sketch in the terminal.')
    .demandOption(['s'])
    .help('h')
    .alias('h', 'help')
    .argv;

var os = require('os');
var path = require('path');
var spawn = require('child_process').spawn;
var phantomjs = require('phantomjs2').path;

var renderer = path.join(__dirname, 'renderer.js');
var fileNameArray = [];

function renderWebpage (source, target, cb) {
  var args = [renderer, source, target];
  var child = spawn(phantomjs, args, { stdio: 'ignore' });

  // Very annoying but the precision on file modification time seems to preclude that from being used to sort our file order
  // this is not a smart/clever way to workaround but .. it works.
  for(var i = 0; i < 30; i++){
    fileNameArray.push("sketch" + i + ".png");
  }

  child.on('error', cb);
    child.on('exit', function (code) {
      if (code !== 0) {
        return cb(new Error('Bad exit code: ' + code));
      }

      cb(null);
    });
}

argv.sketch = argv.sketch.replace('~', os.homedir());

function main(folder){
  renderWebpage('file:///' + folder + '/index.html', 'sketch.png', function (err) {
    if (err){
      throw err;
    }

    console.log('Success!');
  });
}

main(argv.sketch);
